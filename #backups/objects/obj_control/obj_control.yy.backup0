// 2021-03-29 12:44:02
#event properties (no comments/etc. here are saved)
parent_index = -1;
uses_physics = false;

#event create
nest = new Nest(rw/2, rh/2, 50, 0);
food = []; /// @is {FoodCluster[]}
for(i = 0; i < 3; i++)
{
    food[i] = new FoodCluster(random(rw), random(rh), irandom(40)+40);
}

ants = []; /// @is {Ant[]}
pheromones = []; /// @is {Pheromone[]}

quad = new Quad(new Rectangle(0, 0, rw, rh), 4, 12); /// @is {Quad}
quadTimer = 60; // Regenerate quadtree every second

pressX = 0;
pressY = 0;

avrFps = 0;

#region Camera
view_enabled = true;
view_visible[0] = true;

view_camera[0] = camera_create_view(0, 0, 1280, 800);

window_set_size(1280, 800);
surface_resize(application_surface, 1280, 800);

function resize(zoom, ox, oy)
{
    #import camera.*
    
    ox ??= .5;
    oy ??= .5;
    
    var _w = get_view_width(view_camera[0]),
        _h = get_view_height(view_camera[0]),
        _x = get_view_x(view_camera[0]),
        _y = get_view_y(view_camera[0]);
        
    set_view_pos(view_camera[0], _x + (_w - (_w*zoom))*ox, _y + (_h - (_h*zoom))*oy);
    set_view_size(view_camera[0], _w*zoom, _h*zoom);
}
#endregion

#event step

if(mouse_check_button_pressed(mb_left))
{
    // array_push(ants, new Ant(mouse_x, mouse_y, random(pi)));
    array_push(pheromones, new Pheromone(mouse_x, mouse_y, 1));
}

if(mouse_check_button_pressed(mb_right))
{
    pressX = mouse_x;
    pressY = mouse_y;
}

if(mouse_check_button_released(mb_right))
{
    array_push(ants, new Ant(pressX, pressY, arctan2(mouse_y-pressY, mouse_x-pressX)));
}

if(mouse_check_button_pressed(mb_middle))
{
    var kPoints = quad.kNearest(mouse_x, mouse_y, 4);
    
    for(i = 0; i < array_length(kPoints); i++)
    {
        kPoints[i].c = c_yellow;
    }
}

#region Update

nest.create(ants);

var l = array_length(ants);
for(i = 0; i < l; i++)
{
    ants[i].avoid();
    ants[i].sense(quad);
    ants[i].trail(pheromones, quad);
    ants[i].update();
}

#endregion

#region Camera
if(mouse_wheel_up())
{
    resize(.8, window_mouse_get_x()/window_get_width(), window_mouse_get_y()/window_get_height());
}
else if(mouse_wheel_down())
{
    resize(1.2, window_mouse_get_x()/window_get_width(), window_mouse_get_y()/window_get_height());
}
#endregion

#event step_begin
var regenerateQuad = quadTimer <= 0;

if(regenerateQuad)
{
    delete quad;
    
    quad = new Quad(new Rectangle(0, 0, rw, rh), 1, 12);
    quadTimer = 60;
}
else quadTimer--;

var deletePheromones = [],
    deletedPheromones = 0;

var l = array_length(pheromones);
for(i = 0; i < l; i++)
{
    if(regenerateQuad) quad.insert(pheromones[i]);
    
    if(pheromones[i].evaporate(0.05))
    {
        array_push(deletePheromones, i);
        deletedPheromones++;
    }
}

for(i = 0; i < deletedPheromones; i++)
{
    array_delete(pheromones, deletePheromones[i], 1);
}

#event draw
draw_set_color(c_white);
quad.draw();

for(i = 0; i < array_length(pheromones); i++)
{
    draw_set_color(pheromones[i].c);
    draw_set_alpha(pheromones[i].weight);
    draw_circle(pheromones[i].pos.x, pheromones[i].pos.y, 1.5, false);
}
draw_set_alpha(1);

var l = array_length(ants);
for(i = 0; i < l; i++)
{
    ants[i].draw();
}

for(i = 0; i < 3; i++)
{
    food[i].draw();
}
nest.draw();

#event draw_gui
draw_set_color(c_white);

avrFps = (avrFps + fps_real)*.5;

draw_text(5, 5, string(avrFps) + "\n" + string(array_length(pheromones)));